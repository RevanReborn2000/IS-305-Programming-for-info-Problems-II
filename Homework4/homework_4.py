# -*- coding: utf-8 -*-
"""Homework 4

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZDTXN41CpOlByzGOg7BLhdOyCzAk6t4L
"""

#Step 1
import csv
import string
from collections import Counter

#Step 2
def ngram_letters(name, num):
    name = name.lower()
    nameparts = [n.strip(string.punctuation) for n in name.split()]
    grams = []
    if len(nameparts) > 1:
        for part in nameparts:
            grams += ngram_letters(part,num)
    else:
        for i in range(len(name)):
            if i + num > len(name):
                break
            grams.append(name[i:i + num])
    return grams

print(ngram_letters("pikachu", 2))

#Step 3
infile = open('corrected_pokemon_names.csv', 'r')

csvin = csv.reader(infile)

header = next(csvin)
pokemon = [] 
for row in csvin:
    pokemon.append(row)

#print(len(headers))
#print(len(pokemon))

bigdataT = open("bigdata.txt")
bigdata = []
for i in bigdataT:
  i = i.lower()
  i = i.strip("\n")
  i = i.translate(str.maketrans('', '', string.punctuation))
  bigdata.append(i)
#print(bigdata[:5])

#Step 4
duos = []
pokemon_names = []

for name in pokemon:
  pokemon_names.append(name[1])

print(pokemon_names)


for i in pokemon_names:
  a = ngram_letters(i,2)
  for z in a:
    duos.append(z)

for x in bigdata:
  b = ngram_letters(x,2)
  for t in b:
    duos.append(t)

unique_duos = set(duos)

print("there are", len(duos), "individual pairs")
print(duos[:10])
print('there are', len(unique_duos), 'unique letter pairs')

#Step 5

headers = []
headers.append("name")
for i in unique_duos:
  headers.append(i)

headers.append("type")

print(len(headers))
print(headers)

import collections
#Step 7



unique_pokemon = set(pokemon_names)
unique_bigdata = set(bigdata)
counted_parts = {}



#pokemon section
#null value present, must remove
unique_pokemon.remove("")

for poke in unique_pokemon:
  name_id = poke + "-p"
  pokeGram = ngram_letters(poke,2)
  entity_results = dict(collections.Counter(pokeGram))
  entity_results["name"] = poke
  entity_results["type"] = "pokemon"
  counted_parts[name_id] = entity_results
#print(entity_results)


#bigdata section
for dat in unique_bigdata:
  name_id = dat + "-b"
  datGram = ngram_letters(dat,2)
  entity_results = dict(collections.Counter(datGram))
  entity_results["name"] = dat
  entity_results["type"] = "bigdata"
  counted_parts[name_id] = entity_results
#print(entity_results)


#check
#print(len(unique_pokemon), len(unique_bigdata))
#print(len(counted_parts))
#print(counted_parts['Pikachu-p'])
#print(counted_parts['splunk-b'])

#Step 8

bag = []

for entity, values in counted_parts.items():
   row = [0] * len(headers)
   for field, cell_value in values.items():
     pos = headers.index(field)
     row[pos] = cell_value
   bag.append(row)
     #print(field, cell_value)


#finaltest
print(len(bag))
print(bag[305])

import csv
import pathlib
outfile = open(pathlib.Path('pokemon_bigdata_bow.csv'), 'w')
csvout = csv.writer(outfile)
    
csvout.writerow(headers) 
csvout.writerows(bag) 
outfile.close()