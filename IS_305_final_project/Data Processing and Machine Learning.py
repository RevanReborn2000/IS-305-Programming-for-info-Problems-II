# -*- coding: utf-8 -*-
"""Concepts of Machine Learning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ETIcRpxWDy6ukePziw-VINeD6t0mr0Wf
"""

#Imports
#sklearn and its accompanying func
from sklearn.linear_model import LinearRegression
from sklearn import preprocessing, svm 
from sklearn.model_selection import train_test_split 
from sklearn.linear_model import LinearRegression

import csv
import numpy as np
import pandas as pd 
import seaborn as sns 
import matplotlib.pyplot as plt

#Load in data
df = pd.read_csv("slr_data.csv")
df

#we will construct a new dataframe from the original
df_x_y = df[["x","y"]]
df_x_y

import re

ex = []
for i in df_x_y["x"]:
  i = str(i)
  i = re.sub("[^0-9]", "", i)
  i = int(i)
  ex.append(i)
 

y = []
for x in df_x_y["y"]:
  x = str(i)
  x = re.sub("[^0-9]", "", x)
  x = int(x)
  y.append(x)

df_x_y2 =  pd.DataFrame(
    {'x': ex,
     'y': y,})
 
df_x_y2

df = pd.read_csv('Life Expectancy Data.csv') 
df

df1 = df[["Country","Year","life expectancy "]]
df1

df2 = df1.loc[df1["Country"] == "United States of America"]

df2

df2 = df2[:][:500]

sns.scatterplot(x ="Year", y ="life expectancy ", data = df2)

X = np.array(df2['Year']).reshape(-1, 1) 
y = np.array(df2['life expectancy ']).reshape(-1, 1)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25)

regr = LinearRegression() 
regr.fit(X_train, y_train)

train_score = regr.score(X_train, y_train)
print("Our model's training score is: ", train_score)

test_score = regr.score(X_test, y_test)
print("Our model's test score is:", test_score )


y_pred = regr.predict(X_test) 
plt.scatter(X_test, y_test, color ='g') 
plt.plot(X_test, y_pred, color ='k') 
plt.figure(figsize= (25222,25222))
  
plt.show()

